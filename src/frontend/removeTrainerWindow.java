
package frontend;

import backend.AdminRole;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class removeTrainerWindow extends javax.swing.JFrame {

    /**
     * Creates new form removeTrainerWindow
     */
    AdminRole adminRole;
    AdminRoleWindow adminW;
    public removeTrainerWindow(AdminRole adminRole , AdminRoleWindow adminW) {
        initComponents();
        this.adminRole =adminRole;
        this.adminW = adminW;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        trainerId = new javax.swing.JTextField();
        Remove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Remove Trainer");

        jLabel1.setBackground(new java.awt.Color(51, 255, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Trainer Id");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel1.setOpaque(true);

        trainerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerIdActionPerformed(evt);
            }
        });

        Remove.setBackground(new java.awt.Color(0, 0, 0));
        Remove.setForeground(new java.awt.Color(255, 255, 255));
        Remove.setText("Remove");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(trainerId, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trainerId)
                    .addComponent(Remove, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trainerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainerIdActionPerformed
       
    }//GEN-LAST:event_trainerIdActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
      
        String id =trainerId.getText();
        
         if (id.equals("")) {
            JOptionPane.showMessageDialog(this, "Some fields are empty!");
        } else {

            try {
                boolean b = adminRole.removeTrainer(id);
                if(b){
                    JOptionPane.showMessageDialog(this, "The Trainer with Id = " + id + " has been deleted");
                    dispose();
                }else
                    JOptionPane.showMessageDialog(this, "The Trainer with Id = " + id + " doesnot exist");
            } catch (IOException ex) {
                Logger.getLogger(removeTrainerWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
                }
        
    }//GEN-LAST:event_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Remove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField trainerId;
    // End of variables declaration//GEN-END:variables
}
